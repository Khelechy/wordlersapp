@page "/room/game"
@layout MainLayout


<PageTitle>Create Game Room</PageTitle>

<MudStack Class="relative d-flex" Style="height: 100vh;">

    <MudStack Class="justify-space-between mt-5" Height="100%">

        <MudButton Class="align-self-end z-100" Variant="Variant.Filled" Color="Color.Primary">Start Game</MudButton>
        <MudButton Class="align-self-start" Variant="Variant.Filled" Color="Color.Primary" Disabled="true">
            Messages:
        </MudButton>

        @if(messages.Count > 0)
        {
            <MudList>
                @foreach (var message in messages)
                {
                    <MudListItem>
                        <MudText>@message</MudText>
                    </MudListItem>
                    <MudDivider DividerType="DividerType.Middle" />
                }
            </MudList>
        }

    </MudStack>

    <MudStack Class="fixed pa-3" Style="bottom: 0; left:0; width: 100%;" Row="true">
        <MudTextField @ref="inputBoxReference" @bind-Value="InputMessage" Immediate="true" @onkeydown="@Enter" Label="" Variant="Variant.Outlined" Margin="Margin.Dense" AutoFocus="true"></MudTextField>
        <MudIconButton Icon="@Icons.Material.Filled.Send" OnClick="SendMessage" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Large" />
    </MudStack>
</MudStack>

@code {
    string InputMessage;

    bool isGameOwner;

    private MudTextField<string> inputBoxReference;

    private List<string> messages = new List<string>();

    protected async override Task OnInitializedAsync()
    {
        base.OnInitialized();
        await Task.Delay(1000);
        var mesg = $"WordlerBot: Welcome to wordlers game room";
        messages.Add(mesg);
    }


    public void Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            SendMessage();
        }
    }

    async void SendMessage()
    {
        var mesg = $"Khelechy: {InputMessage}";
        messages.Add(mesg);
        InputMessage = string.Empty;
        inputBoxReference.FocusAsync();
    }

}
